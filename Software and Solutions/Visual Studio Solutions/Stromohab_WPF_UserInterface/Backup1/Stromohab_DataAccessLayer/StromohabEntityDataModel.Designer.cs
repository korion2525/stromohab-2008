//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("stromohabDevModel", "fk_Patients_Clinicians1", "clinicians", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Stromohab_DataAccessLayer.clinician), "patients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Stromohab_DataAccessLayer.patient), true)]
[assembly: EdmRelationshipAttribute("stromohabDevModel", "fk_Sessions_has_Tasks_Diagnostics1", "diagnostics", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Stromohab_DataAccessLayer.diagnostic), "sessions_has_tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Stromohab_DataAccessLayer.sessions_has_tasks), true)]
[assembly: EdmRelationshipAttribute("stromohabDevModel", "fk_Sessions_Patients1", "patients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Stromohab_DataAccessLayer.patient), "sessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Stromohab_DataAccessLayer.session), true)]
[assembly: EdmRelationshipAttribute("stromohabDevModel", "fk_Sessions_has_Tasks_Tasks1", "tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Stromohab_DataAccessLayer.task), "sessions_has_tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Stromohab_DataAccessLayer.sessions_has_tasks), true)]

#endregion

namespace Stromohab_DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class stromohabDevEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new stromohabDevEntities object using the connection string found in the 'stromohabDevEntities' section of the application configuration file.
        /// </summary>
        public stromohabDevEntities() : base("name=stromohabDevEntities", "stromohabDevEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new stromohabDevEntities object.
        /// </summary>
        public stromohabDevEntities(string connectionString) : base(connectionString, "stromohabDevEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new stromohabDevEntities object.
        /// </summary>
        public stromohabDevEntities(EntityConnection connection) : base(connection, "stromohabDevEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<clinician> clinicians
        {
            get
            {
                if ((_clinicians == null))
                {
                    _clinicians = base.CreateObjectSet<clinician>("clinicians");
                }
                return _clinicians;
            }
        }
        private ObjectSet<clinician> _clinicians;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<diagnostic> diagnostics
        {
            get
            {
                if ((_diagnostics == null))
                {
                    _diagnostics = base.CreateObjectSet<diagnostic>("diagnostics");
                }
                return _diagnostics;
            }
        }
        private ObjectSet<diagnostic> _diagnostics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<patient> patients
        {
            get
            {
                if ((_patients == null))
                {
                    _patients = base.CreateObjectSet<patient>("patients");
                }
                return _patients;
            }
        }
        private ObjectSet<patient> _patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<session> sessions
        {
            get
            {
                if ((_sessions == null))
                {
                    _sessions = base.CreateObjectSet<session>("sessions");
                }
                return _sessions;
            }
        }
        private ObjectSet<session> _sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sessions_has_tasks> sessions_has_tasks
        {
            get
            {
                if ((_sessions_has_tasks == null))
                {
                    _sessions_has_tasks = base.CreateObjectSet<sessions_has_tasks>("sessions_has_tasks");
                }
                return _sessions_has_tasks;
            }
        }
        private ObjectSet<sessions_has_tasks> _sessions_has_tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<task> tasks
        {
            get
            {
                if ((_tasks == null))
                {
                    _tasks = base.CreateObjectSet<task>("tasks");
                }
                return _tasks;
            }
        }
        private ObjectSet<task> _tasks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the clinicians EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToclinicians(clinician clinician)
        {
            base.AddObject("clinicians", clinician);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the diagnostics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodiagnostics(diagnostic diagnostic)
        {
            base.AddObject("diagnostics", diagnostic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopatients(patient patient)
        {
            base.AddObject("patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosessions(session session)
        {
            base.AddObject("sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sessions_has_tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosessions_has_tasks(sessions_has_tasks sessions_has_tasks)
        {
            base.AddObject("sessions_has_tasks", sessions_has_tasks);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotasks(task task)
        {
            base.AddObject("tasks", task);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="stromohabDevModel", Name="clinician")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class clinician : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new clinician object.
        /// </summary>
        /// <param name="cFirstName">Initial value of the cFirstName property.</param>
        /// <param name="cIsAdmin">Initial value of the cIsAdmin property.</param>
        /// <param name="cLastName">Initial value of the cLastName property.</param>
        /// <param name="cPassword">Initial value of the cPassword property.</param>
        /// <param name="cUserName">Initial value of the cUserName property.</param>
        public static clinician Createclinician(global::System.String cFirstName, global::System.Boolean cIsAdmin, global::System.String cLastName, global::System.String cPassword, global::System.String cUserName)
        {
            clinician clinician = new clinician();
            clinician.cFirstName = cFirstName;
            clinician.cIsAdmin = cIsAdmin;
            clinician.cLastName = cLastName;
            clinician.cPassword = cPassword;
            clinician.cUserName = cUserName;
            return clinician;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cFirstName
        {
            get
            {
                return _cFirstName;
            }
            set
            {
                OncFirstNameChanging(value);
                ReportPropertyChanging("cFirstName");
                _cFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cFirstName");
                OncFirstNameChanged();
            }
        }
        private global::System.String _cFirstName;
        partial void OncFirstNameChanging(global::System.String value);
        partial void OncFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean cIsAdmin
        {
            get
            {
                return _cIsAdmin;
            }
            set
            {
                OncIsAdminChanging(value);
                ReportPropertyChanging("cIsAdmin");
                _cIsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cIsAdmin");
                OncIsAdminChanged();
            }
        }
        private global::System.Boolean _cIsAdmin;
        partial void OncIsAdminChanging(global::System.Boolean value);
        partial void OncIsAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cLastName
        {
            get
            {
                return _cLastName;
            }
            set
            {
                OncLastNameChanging(value);
                ReportPropertyChanging("cLastName");
                _cLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cLastName");
                OncLastNameChanged();
            }
        }
        private global::System.String _cLastName;
        partial void OncLastNameChanging(global::System.String value);
        partial void OncLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cPassword
        {
            get
            {
                return _cPassword;
            }
            set
            {
                OncPasswordChanging(value);
                ReportPropertyChanging("cPassword");
                _cPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cPassword");
                OncPasswordChanged();
            }
        }
        private global::System.String _cPassword;
        partial void OncPasswordChanging(global::System.String value);
        partial void OncPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cUserName
        {
            get
            {
                return _cUserName;
            }
            set
            {
                if (_cUserName != value)
                {
                    OncUserNameChanging(value);
                    ReportPropertyChanging("cUserName");
                    _cUserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cUserName");
                    OncUserNameChanged();
                }
            }
        }
        private global::System.String _cUserName;
        partial void OncUserNameChanging(global::System.String value);
        partial void OncUserNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Patients_Clinicians1", "patients")]
        public EntityCollection<patient> patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<patient>("stromohabDevModel.fk_Patients_Clinicians1", "patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<patient>("stromohabDevModel.fk_Patients_Clinicians1", "patients", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="stromohabDevModel", Name="diagnostic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class diagnostic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new diagnostic object.
        /// </summary>
        /// <param name="dDistanceTravelled">Initial value of the dDistanceTravelled property.</param>
        /// <param name="idDiagnostics">Initial value of the idDiagnostics property.</param>
        public static diagnostic Creatediagnostic(global::System.Int32 dDistanceTravelled, global::System.Int32 idDiagnostics)
        {
            diagnostic diagnostic = new diagnostic();
            diagnostic.dDistanceTravelled = dDistanceTravelled;
            diagnostic.idDiagnostics = idDiagnostics;
            return diagnostic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dDistanceTravelled
        {
            get
            {
                return _dDistanceTravelled;
            }
            set
            {
                OndDistanceTravelledChanging(value);
                ReportPropertyChanging("dDistanceTravelled");
                _dDistanceTravelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dDistanceTravelled");
                OndDistanceTravelledChanged();
            }
        }
        private global::System.Int32 _dDistanceTravelled;
        partial void OndDistanceTravelledChanging(global::System.Int32 value);
        partial void OndDistanceTravelledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> dStrideSymmetry
        {
            get
            {
                return _dStrideSymmetry;
            }
            set
            {
                OndStrideSymmetryChanging(value);
                ReportPropertyChanging("dStrideSymmetry");
                _dStrideSymmetry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dStrideSymmetry");
                OndStrideSymmetryChanged();
            }
        }
        private Nullable<global::System.Int32> _dStrideSymmetry;
        partial void OndStrideSymmetryChanging(Nullable<global::System.Int32> value);
        partial void OndStrideSymmetryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idDiagnostics
        {
            get
            {
                return _idDiagnostics;
            }
            set
            {
                if (_idDiagnostics != value)
                {
                    OnidDiagnosticsChanging(value);
                    ReportPropertyChanging("idDiagnostics");
                    _idDiagnostics = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idDiagnostics");
                    OnidDiagnosticsChanged();
                }
            }
        }
        private global::System.Int32 _idDiagnostics;
        partial void OnidDiagnosticsChanging(global::System.Int32 value);
        partial void OnidDiagnosticsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Sessions_has_Tasks_Diagnostics1", "sessions_has_tasks")]
        public EntityCollection<sessions_has_tasks> sessions_has_tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sessions_has_tasks>("stromohabDevModel.fk_Sessions_has_Tasks_Diagnostics1", "sessions_has_tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sessions_has_tasks>("stromohabDevModel.fk_Sessions_has_Tasks_Diagnostics1", "sessions_has_tasks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="stromohabDevModel", Name="patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new patient object.
        /// </summary>
        /// <param name="clinicians_cUserName">Initial value of the Clinicians_cUserName property.</param>
        /// <param name="idPatient">Initial value of the idPatient property.</param>
        /// <param name="pDateOfBirth">Initial value of the pDateOfBirth property.</param>
        /// <param name="pFirstName">Initial value of the pFirstName property.</param>
        /// <param name="pGender">Initial value of the pGender property.</param>
        /// <param name="pLastName">Initial value of the pLastName property.</param>
        public static patient Createpatient(global::System.String clinicians_cUserName, global::System.Int32 idPatient, global::System.DateTime pDateOfBirth, global::System.String pFirstName, global::System.String pGender, global::System.String pLastName)
        {
            patient patient = new patient();
            patient.Clinicians_cUserName = clinicians_cUserName;
            patient.idPatient = idPatient;
            patient.pDateOfBirth = pDateOfBirth;
            patient.pFirstName = pFirstName;
            patient.pGender = pGender;
            patient.pLastName = pLastName;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Clinicians_cUserName
        {
            get
            {
                return _Clinicians_cUserName;
            }
            set
            {
                if (_Clinicians_cUserName != value)
                {
                    OnClinicians_cUserNameChanging(value);
                    ReportPropertyChanging("Clinicians_cUserName");
                    _Clinicians_cUserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Clinicians_cUserName");
                    OnClinicians_cUserNameChanged();
                }
            }
        }
        private global::System.String _Clinicians_cUserName;
        partial void OnClinicians_cUserNameChanging(global::System.String value);
        partial void OnClinicians_cUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPatient
        {
            get
            {
                return _idPatient;
            }
            set
            {
                if (_idPatient != value)
                {
                    OnidPatientChanging(value);
                    ReportPropertyChanging("idPatient");
                    _idPatient = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPatient");
                    OnidPatientChanged();
                }
            }
        }
        private global::System.Int32 _idPatient;
        partial void OnidPatientChanging(global::System.Int32 value);
        partial void OnidPatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pContactNumber
        {
            get
            {
                return _pContactNumber;
            }
            set
            {
                OnpContactNumberChanging(value);
                ReportPropertyChanging("pContactNumber");
                _pContactNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pContactNumber");
                OnpContactNumberChanged();
            }
        }
        private global::System.String _pContactNumber;
        partial void OnpContactNumberChanging(global::System.String value);
        partial void OnpContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime pDateOfBirth
        {
            get
            {
                return _pDateOfBirth;
            }
            set
            {
                OnpDateOfBirthChanging(value);
                ReportPropertyChanging("pDateOfBirth");
                _pDateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pDateOfBirth");
                OnpDateOfBirthChanged();
            }
        }
        private global::System.DateTime _pDateOfBirth;
        partial void OnpDateOfBirthChanging(global::System.DateTime value);
        partial void OnpDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pFirstName
        {
            get
            {
                return _pFirstName;
            }
            set
            {
                OnpFirstNameChanging(value);
                ReportPropertyChanging("pFirstName");
                _pFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pFirstName");
                OnpFirstNameChanged();
            }
        }
        private global::System.String _pFirstName;
        partial void OnpFirstNameChanging(global::System.String value);
        partial void OnpFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pGender
        {
            get
            {
                return _pGender;
            }
            set
            {
                OnpGenderChanging(value);
                ReportPropertyChanging("pGender");
                _pGender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pGender");
                OnpGenderChanged();
            }
        }
        private global::System.String _pGender;
        partial void OnpGenderChanging(global::System.String value);
        partial void OnpGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pLastName
        {
            get
            {
                return _pLastName;
            }
            set
            {
                OnpLastNameChanging(value);
                ReportPropertyChanging("pLastName");
                _pLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pLastName");
                OnpLastNameChanged();
            }
        }
        private global::System.String _pLastName;
        partial void OnpLastNameChanging(global::System.String value);
        partial void OnpLastNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Patients_Clinicians1", "clinicians")]
        public clinician clinician
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<clinician>("stromohabDevModel.fk_Patients_Clinicians1", "clinicians").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<clinician>("stromohabDevModel.fk_Patients_Clinicians1", "clinicians").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<clinician> clinicianReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<clinician>("stromohabDevModel.fk_Patients_Clinicians1", "clinicians");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<clinician>("stromohabDevModel.fk_Patients_Clinicians1", "clinicians", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Sessions_Patients1", "sessions")]
        public EntityCollection<session> sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<session>("stromohabDevModel.fk_Sessions_Patients1", "sessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<session>("stromohabDevModel.fk_Sessions_Patients1", "sessions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="stromohabDevModel", Name="session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new session object.
        /// </summary>
        /// <param name="idSession">Initial value of the idSession property.</param>
        /// <param name="patients_Clinicians_cUserName">Initial value of the Patients_Clinicians_cUserName property.</param>
        /// <param name="patients_idPatient">Initial value of the Patients_idPatient property.</param>
        /// <param name="sDate">Initial value of the sDate property.</param>
        /// <param name="sTime">Initial value of the sTime property.</param>
        public static session Createsession(global::System.Int32 idSession, global::System.String patients_Clinicians_cUserName, global::System.Int32 patients_idPatient, global::System.DateTime sDate, global::System.TimeSpan sTime)
        {
            session session = new session();
            session.idSession = idSession;
            session.Patients_Clinicians_cUserName = patients_Clinicians_cUserName;
            session.Patients_idPatient = patients_idPatient;
            session.sDate = sDate;
            session.sTime = sTime;
            return session;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idSession
        {
            get
            {
                return _idSession;
            }
            set
            {
                if (_idSession != value)
                {
                    OnidSessionChanging(value);
                    ReportPropertyChanging("idSession");
                    _idSession = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idSession");
                    OnidSessionChanged();
                }
            }
        }
        private global::System.Int32 _idSession;
        partial void OnidSessionChanging(global::System.Int32 value);
        partial void OnidSessionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Patients_Clinicians_cUserName
        {
            get
            {
                return _Patients_Clinicians_cUserName;
            }
            set
            {
                if (_Patients_Clinicians_cUserName != value)
                {
                    OnPatients_Clinicians_cUserNameChanging(value);
                    ReportPropertyChanging("Patients_Clinicians_cUserName");
                    _Patients_Clinicians_cUserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Patients_Clinicians_cUserName");
                    OnPatients_Clinicians_cUserNameChanged();
                }
            }
        }
        private global::System.String _Patients_Clinicians_cUserName;
        partial void OnPatients_Clinicians_cUserNameChanging(global::System.String value);
        partial void OnPatients_Clinicians_cUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Patients_idPatient
        {
            get
            {
                return _Patients_idPatient;
            }
            set
            {
                if (_Patients_idPatient != value)
                {
                    OnPatients_idPatientChanging(value);
                    ReportPropertyChanging("Patients_idPatient");
                    _Patients_idPatient = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Patients_idPatient");
                    OnPatients_idPatientChanged();
                }
            }
        }
        private global::System.Int32 _Patients_idPatient;
        partial void OnPatients_idPatientChanging(global::System.Int32 value);
        partial void OnPatients_idPatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime sDate
        {
            get
            {
                return _sDate;
            }
            set
            {
                OnsDateChanging(value);
                ReportPropertyChanging("sDate");
                _sDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sDate");
                OnsDateChanged();
            }
        }
        private global::System.DateTime _sDate;
        partial void OnsDateChanging(global::System.DateTime value);
        partial void OnsDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan sTime
        {
            get
            {
                return _sTime;
            }
            set
            {
                OnsTimeChanging(value);
                ReportPropertyChanging("sTime");
                _sTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sTime");
                OnsTimeChanged();
            }
        }
        private global::System.TimeSpan _sTime;
        partial void OnsTimeChanging(global::System.TimeSpan value);
        partial void OnsTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Sessions_Patients1", "patients")]
        public patient patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("stromohabDevModel.fk_Sessions_Patients1", "patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("stromohabDevModel.fk_Sessions_Patients1", "patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<patient> patientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("stromohabDevModel.fk_Sessions_Patients1", "patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<patient>("stromohabDevModel.fk_Sessions_Patients1", "patients", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="stromohabDevModel", Name="sessions_has_tasks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sessions_has_tasks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sessions_has_tasks object.
        /// </summary>
        /// <param name="diagnostics_idDiagnostics">Initial value of the Diagnostics_idDiagnostics property.</param>
        /// <param name="sessions_idSession">Initial value of the Sessions_idSession property.</param>
        /// <param name="tasks_idTask">Initial value of the Tasks_idTask property.</param>
        public static sessions_has_tasks Createsessions_has_tasks(global::System.Int32 diagnostics_idDiagnostics, global::System.Int32 sessions_idSession, global::System.Int32 tasks_idTask)
        {
            sessions_has_tasks sessions_has_tasks = new sessions_has_tasks();
            sessions_has_tasks.Diagnostics_idDiagnostics = diagnostics_idDiagnostics;
            sessions_has_tasks.Sessions_idSession = sessions_idSession;
            sessions_has_tasks.Tasks_idTask = tasks_idTask;
            return sessions_has_tasks;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Diagnostics_idDiagnostics
        {
            get
            {
                return _Diagnostics_idDiagnostics;
            }
            set
            {
                if (_Diagnostics_idDiagnostics != value)
                {
                    OnDiagnostics_idDiagnosticsChanging(value);
                    ReportPropertyChanging("Diagnostics_idDiagnostics");
                    _Diagnostics_idDiagnostics = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Diagnostics_idDiagnostics");
                    OnDiagnostics_idDiagnosticsChanged();
                }
            }
        }
        private global::System.Int32 _Diagnostics_idDiagnostics;
        partial void OnDiagnostics_idDiagnosticsChanging(global::System.Int32 value);
        partial void OnDiagnostics_idDiagnosticsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sessions_idSession
        {
            get
            {
                return _Sessions_idSession;
            }
            set
            {
                if (_Sessions_idSession != value)
                {
                    OnSessions_idSessionChanging(value);
                    ReportPropertyChanging("Sessions_idSession");
                    _Sessions_idSession = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Sessions_idSession");
                    OnSessions_idSessionChanged();
                }
            }
        }
        private global::System.Int32 _Sessions_idSession;
        partial void OnSessions_idSessionChanging(global::System.Int32 value);
        partial void OnSessions_idSessionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tasks_idTask
        {
            get
            {
                return _Tasks_idTask;
            }
            set
            {
                if (_Tasks_idTask != value)
                {
                    OnTasks_idTaskChanging(value);
                    ReportPropertyChanging("Tasks_idTask");
                    _Tasks_idTask = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Tasks_idTask");
                    OnTasks_idTaskChanged();
                }
            }
        }
        private global::System.Int32 _Tasks_idTask;
        partial void OnTasks_idTaskChanging(global::System.Int32 value);
        partial void OnTasks_idTaskChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Sessions_has_Tasks_Diagnostics1", "diagnostics")]
        public diagnostic diagnostic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<diagnostic>("stromohabDevModel.fk_Sessions_has_Tasks_Diagnostics1", "diagnostics").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<diagnostic>("stromohabDevModel.fk_Sessions_has_Tasks_Diagnostics1", "diagnostics").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diagnostic> diagnosticReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<diagnostic>("stromohabDevModel.fk_Sessions_has_Tasks_Diagnostics1", "diagnostics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<diagnostic>("stromohabDevModel.fk_Sessions_has_Tasks_Diagnostics1", "diagnostics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Sessions_has_Tasks_Tasks1", "tasks")]
        public task task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("stromohabDevModel.fk_Sessions_has_Tasks_Tasks1", "tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("stromohabDevModel.fk_Sessions_has_Tasks_Tasks1", "tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<task> taskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("stromohabDevModel.fk_Sessions_has_Tasks_Tasks1", "tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<task>("stromohabDevModel.fk_Sessions_has_Tasks_Tasks1", "tasks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="stromohabDevModel", Name="task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new task object.
        /// </summary>
        /// <param name="idTask">Initial value of the idTask property.</param>
        public static task Createtask(global::System.Int32 idTask)
        {
            task task = new task();
            task.idTask = idTask;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idTask
        {
            get
            {
                return _idTask;
            }
            set
            {
                if (_idTask != value)
                {
                    OnidTaskChanging(value);
                    ReportPropertyChanging("idTask");
                    _idTask = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idTask");
                    OnidTaskChanged();
                }
            }
        }
        private global::System.Int32 _idTask;
        partial void OnidTaskChanging(global::System.Int32 value);
        partial void OnidTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String tName
        {
            get
            {
                return _tName;
            }
            set
            {
                OntNameChanging(value);
                ReportPropertyChanging("tName");
                _tName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tName");
                OntNameChanged();
            }
        }
        private global::System.String _tName;
        partial void OntNameChanging(global::System.String value);
        partial void OntNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] tData
        {
            get
            {
                return StructuralObject.GetValidValue(_tData);
            }
            set
            {
                OntDataChanging(value);
                ReportPropertyChanging("tData");
                _tData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tData");
                OntDataChanged();
            }
        }
        private global::System.Byte[] _tData;
        partial void OntDataChanging(global::System.Byte[] value);
        partial void OntDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("stromohabDevModel", "fk_Sessions_has_Tasks_Tasks1", "sessions_has_tasks")]
        public EntityCollection<sessions_has_tasks> sessions_has_tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sessions_has_tasks>("stromohabDevModel.fk_Sessions_has_Tasks_Tasks1", "sessions_has_tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sessions_has_tasks>("stromohabDevModel.fk_Sessions_has_Tasks_Tasks1", "sessions_has_tasks", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
